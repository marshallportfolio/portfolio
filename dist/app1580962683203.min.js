!function(){"use strict";angular.module("enterpriseApp.dashboards",["ui.router"]).config(["$stateProvider",function(r){r.state("dashboards",{url:"/dashboards",templateUrl:"dashboards/dashboards.html",controller:"DashboardsCtrl",controllerAs:"vm"})}])}();
!function(){"use strict";angular.module("enterpriseApp.reports",["ui.router"]).config(["$stateProvider",function(r){r.state("reports",{url:"/reports",templateUrl:"reports/reports.html",controller:"ReportsCtrl",controllerAs:"vm",name:"reports"})}])}();
!function(){"use strict";angular.module("enterpriseApp.settings",["ui.router"]).config(["$stateProvider",function(t){t.state("settings",{name:"settings",url:"/settings",templateUrl:"settings/settings.html",controller:"SettingsCtrl",controllerAs:"vm"})}])}();
!function(){"use strict";function e(e,n,a){var r=this;r.isLoading=!0,r.showNavMenu=!0,r.showMobileMenu=!1,r.currentMenu="dashboards",r.selectMenuItem=function(e){r.currentMenu=e,r.showMobileMenu=!1};var t=a.$on("$translateChangeEnd",function(){r.isLoading=!1}),s=a.$on("$stateChangeSuccess",function(n,a){e.debug("In stateChangeSuccess loading state:"+a.name),a&&a.name&&(r.currentMenu=a.name)});n.$on("$destroy",function(){t(),s()})}angular.module("enterpriseApp",["ui.router","ngSanitize","pascalprecht.translate","enterpriseApp.dashboards","enterpriseApp.reports","enterpriseApp.settings","enterpriseApp.templates"]).config(["$locationProvider","$translateProvider","$urlRouterProvider",function(e,n,a){e.hashPrefix("!"),a.otherwise("/dashboards"),n.useStaticFilesLoader({prefix:"l10n/",suffix:".json"}).registerAvailableLanguageKeys(["en-US","ja"],{en:"en-US","en_*":"en-US","en-*":"en-US",ja:"ja","ja-*":"ja","ja_*":"ja","*":"en-US"}).determinePreferredLanguage().fallbackLanguage("en-US"),n.useSanitizeValueStrategy("sanitizeParameters")}]).controller("enterpriseAppController",e),e.$inject=["$log","$scope","$rootScope"]}();
!function(){"use strict";function t(t,e,n){function r(t){return n(function(){return t},Math.floor(Math.random()*Math.floor(4e3)))}function a(t){if(angular.isDefined(t))return moment(t,"YYYYMMDD").format("L")}var o="en-US",u={preferredLanguage:o,simulateBackendCall:r,formatDate:a};return u}angular.module("enterpriseApp").factory("appService",t),t.$inject=["$http","$log","$timeout"]}();
!function(){"use strict";function t(t,n){function r(){n.getPieChartData().then(function(t){l.pieChartData=o(t.data),l.pieLoading=!1}),n.getBarChartData().then(function(t){l.barChartData=u(t.data),l.barLoading=!1}),n.getLineChartData().then(function(t){l.lineChartData=i(t.data),l.lineLoading=!1})}function o(t){a(t);for(var n=t.reduce(e,0),r=0,o=0,u=t.length;o<u;o++)t[o].offset=r,t[o].percent=t[o].value/n*100,r+=t[o].percent,t[o].over50=t[o].percent>50?1:0;return t}function u(t){a(t);var n=t.reduce(e,0);t.topMostPoint=t[0].value;for(var r=0,o=t.length;r<o;r++)t[r].percent=t[r].value/n*100;return t}function i(t){function e(t){return t*(180/Math.PI)}var n=200/t.length;a(t);for(var r=t[0].value,o=40,u=0,i=0,l=[],h=0,s=t.length-1;h<s;h++){var v={left:0,bottom:0,hypotenuse:0,angle:0,value:0,item:""};v.value=t[h].value,v.item=t[h].item,v.left=o>0?o-2:o,o+=n,v.bottom=150*(v.value/r),u=150*(t[h+1].value/r),i=v.bottom-u,v.hypotenuse=Math.sqrt(n*n+i*i),v.angle=e(Math.asin(i/v.hypotenuse)),l.push(v)}var c={left:o-2,bottom:150*(t[t.length-1].value/r),hypotenuse:0,angle:0,value:t[t.length-1].value,item:t[t.length-1].item};return l.push(c),l.topMostPoint=r,l}var l=this;l.title="dashboards",l.pieLoading=!0,l.barLoading=!0,l.lineLoading=!0,l.startDate=moment().subtract(6,"days").format("YYYYMMDD"),l.endDate=moment().format("YYYYMMDD"),l.pieChartData,l.barChartData,l.lineChartData,l.formatDate=t.formatDate,r()}function a(t){t.sort(function(t,a){return a.value-t.value})}function e(t,a){return t+a.value}angular.module("enterpriseApp.dashboards").controller("DashboardsCtrl",t),t.$inject=["appService","dashboardsService"]}();
!function(){"use strict";function t(t,a,e){function n(){return e.simulateBackendCall({data:i}).then(s)}function r(){return e.simulateBackendCall({data:i}).then(s)}function u(){return e.simulateBackendCall({data:i}).then(s)}function s(t){return t.data}var c={getPieChartData:n,getBarChartData:r,getLineChartData:u},i={startDate:moment().subtract(6,"days").format("YYYYMMDD"),endDate:moment().format("YYYYMMDD"),data:[{item:"black socks",type:"NUMBER",value:60},{item:"blue socks",type:"NUMBER",value:5},{item:"red socks",type:"NUMBER",value:15},{item:"new socks",type:"NUMBER",value:20}]};return c}angular.module("enterpriseApp.dashboards").factory("dashboardsService",t),t.$inject=["$http","$log","appService"]}();
!function(){"use strict";function t(t,r){function e(){r.getReportData().then(function(t){o.reportData=t,o.loading=!1})}var o=this;o.title="reports",o.loading=!0,o.reportData={},o.formatDate=t.formatDate,e()}angular.module("enterpriseApp.reports").controller("ReportsCtrl",t),t.$inject=["appService","reportsService"]}();
!function(){"use strict";function t(t,d,a){function u(){function t(t){return t.data}var d=[{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40},{date:20200101,id:1001,product:"black socks",quantity:200},{date:20200101,id:1002,product:"blue socks",quantity:500},{date:20200102,id:1011,product:"red socks",quantity:20},{date:20200102,id:1012,product:"plaid socks",quantity:30},{date:20200103,id:1013,product:"argyle socks",quantity:40}];return a.simulateBackendCall({data:d}).then(t)}var c={getReportData:u};return c}angular.module("enterpriseApp.reports").factory("reportsService",t),t.$inject=["$http","$log","appService"]}();
!function(){"use strict";function e(e,n,a){var t=this;t.lang=a.preferredLanguage,t.title="settings",t.changeLanguageAndLocale=function(){a.preferredLanguage=t.lang,moment.locale(t.lang),n.use(t.lang),e.$broadcast("languageChange")}}angular.module("enterpriseApp.settings").controller("SettingsCtrl",e),e.$inject=["$rootScope","$translate","appService"]}();
!function(){"use strict";angular.module("enterpriseApp").directive("spinner",[function(){return{restrict:"EA",templateUrl:"framework/shared/spinner/spinner.html",scope:{small:"@?"}}}])}();
//# sourceMappingURL=data:application/json;base64,
